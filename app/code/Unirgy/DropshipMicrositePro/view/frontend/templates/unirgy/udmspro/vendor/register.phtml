<?php echo $this->getLayout()->getMessagesBlock()->toHtml();?>

<?php
$_hlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\Dropship\Helper\Data');
$_sHlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\DropshipMicrositePro\Helper\Data');
$_session = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\Dropship\Model\Session');
?>
<div id="alertsuccessmsg"></div>
<div id="alerterrormsg"></div>
<div class="loading-mask" data-role="loader" style="display: none;">
	<div class="loader">
		<img alt="Loading..." src="http://tst.foodmakers.cibilia.com/pub/static/frontend/Magento/luma/en_GB/images/loader-2.gif">
		<p>Please wait...</p>
	</div>
</div>
<div class="page-title">
    <h2><?php echo __('Become a Vendor') ?></h2>
    <span class="required"><?php echo __('* Indicated Required Fields') ?></span>
</div>

<form action="<?php echo $this->getUrl('umicrosite/vendor/registerPost')?>" enctype="multipart/form-data" method="post" id="umicrosite-registration-form">
<?php foreach ($this->getForm()->getElements() as $element) {
    echo $element->toHtml();
} ?>

<ul class="form-list">
    <?php echo $this->getChildHtml('form.additional.info'); ?>
</ul>
<div class="step1">
    <button class="form-button" type="button" name="save" id="save"><span><?php echo __('Save') ?></span></button>
    <button class="form-button" type="button" name="cancel"><a href="<?php echo $this->getUrl('udropship/vendor')?>"><span><?php echo __('Cancel') ?></span></a></button>
    <input type="hidden" value="" name="is_ajax" id="is_ajax" />
</div>

<div class="buttons-set">
    <button class="form-button" type="button" name="send" id="register"><?php echo __('Register') ?></button>
    <div class="clearer"></div>
    <ul class="links">
    	<li><a href="<?php echo $this->getUrl('udropship/vendor')?>">&laquo; <?php echo __('Return to log in')?></a></li>
    </ul>
</div>
</form>

<script type="text/javascript">
require(["jquery", "prototype", "varien/form"], function(jQuery) {
	
	jQuery(document).ready(function($){
		$('#udmember_membership_3').attr('checked',true);
		$(".buttons-set").hide();
	
		$('#save').on('click', function() {			
			$("#is_ajax").val("1");
			$("#umicrosite-registration-form").valid();
			if($("#umicrosite-registration-form").valid()){
				var employee = $("#company_employee").val();
				var type = $("#company_type").val();
				if((employee == "more_than_50" && type =="yes") || (employee == "more_than_50" || type =="yes")){
					new Ajax.Request('<?php echo $this->getUrl('umicrosite/vendor/registerPost')?>', {
						asynchronous: true,
						method: 'post',
						parameters: $('#umicrosite-registration-form').serialize(),
						onFailure: function(transport){
							alert('Error during form submission');
						},
						onSuccess: function (transport) {
							var responseText = transport.responseText;
							if(responseText == "success"){
								$("#alertsuccessmsg").html("Sorry, we regret to inform you that we are looking for small companies with no more than 50 employees. Thank you for your interest in cibilia.com.").css("color","red");
								setTimeout(function(){
									$("#alertsuccessmsg").html('');
								}, 6000);
								$('#vendor_name').val("");
								$('#owner_name').val("");
								$('#your_role').val("owner");
								$('#company_address').val("");
								$('#email').val("");
								$('#company_employee').val(1);
								$('#company_type').val("yes");
							} else if(responseText == "error"){
								$("#alerterrormsg").html("Error occured while saving your details, please try again.").css("color","red");
								setTimeout(function(){
									$("#alerterrormsg").html('');
								}, 6000);
							}
						}
					});
				}else{
					$(".loading-mask").css("display","block");
					setTimeout(function(){		
						$("#step1").hide();
						$(".step1").hide();
					}, 6000);
					
					setTimeout(function(){
						$("#step2").show();
						$(".buttons-set").show();
						$(".loading-mask").css("display","none");
					}, 6000);
				}
			}
		});
		
		$("#register").click(function(){
			$("#is_ajax").val("0");
			$("select[name='product_sell_place[]'] option:selected").each(function(){
				console.log($(this).val());
				if($(this).val() == "other"){
					$("#product_sell_place_other").prop('required',true);
				}
			});
			$("select[name='product_categories[]']").prop('required',true);
			$("select[name='product_sell_place[]']").prop('required',true);
				
			$("#logo").prop('required',true);
			$("#vat_number").prop('required',true);
			$("#foundation_year").prop('required',true);
			$("#telephone").prop('required',true);
			$("#umicrosite-registration-form").valid();
			
			if($("#umicrosite-registration-form").valid()){
				$(".loading-mask").css("display","block");
				setTimeout(function(){
					udRegForm.submit();
					$(".loading-mask").css("display","none");
				}, 6000);
			}
		});
	});
	
    var udNumberValidate = function (cmp, v, elm) {
        var checkVal, val = parseNumber(v);
        var checkElId = elm.id+'-'+cmp;
        if ($(checkElId)) {
            checkVal = parseNumber($(checkElId).innerHTML);
        }
        return (!isNaN(val) && !isNaN(checkVal) && udNumberCompare(cmp, val, checkVal))
            || !isNaN(val) && isNaN(checkVal) || v=='';
    }
    var udNumberCompare = function (cmp, a, b) {
        if (cmp == 'lte') {
            return a<=b;
        } else if (cmp == 'lt') {
            return a<b;
        } else if (cmp == 'gte') {
            return a>=b;
        } else if (cmp == 'gt') {
            return a>b;
        } else {
            return true;
        }
    }
    var udLengthValidate = function (sym, cmp, v, elm) {
        var checkVal, val = ''+v;
        if (sym) {
            val = val.gsub(/\s+/, '');
        } else {
            val = val.strip();
        }
        var checkElId = elm.id+'-'+cmp;
        if ($(checkElId)) {
            checkVal = parseNumber($(checkElId).innerHTML);
        }
        var res = (!isNaN(checkVal) && udLengthCompare(cmp, val, checkVal))
            || isNaN(checkVal);
        return res;
    }
    var udLengthCompare = function (cmp, str, len) {
        if (cmp == 'lte') {
            return (''+str).length<=len;
        } else if (cmp == 'lt') {
            return (''+str).length<len;
        } else if (cmp == 'gte') {
            return (''+str).length>=len;
        } else if (cmp == 'gt') {
            return (''+str).length>len;
        } else {
            return true;
        }
    }
    var udCheckEmailExist = function(v, el) {
        var result = true, allowReturn=false;
        if (!v) return true;
        new Ajax.Request('<?php echo $this->getUrl('udmspro/vendor/checkEmailUnique')?>', {
            asynchronous: false,
            method: 'get',
            parameters: {
                email: v
            },
            onFailure: function(transport){
                alert('Error during email check');
            },
            onSuccess: function (transport) {
                var responseText = transport.responseText;
                if (responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        result = false;
                    } else if (response.success) {
                        result = true;
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    result = false;
                    alert('Error during email check');
                }
            }
        });
        return result;
    }
    var udCheckVendorNameExist = function(v, el) {
        var result = true, allowReturn=false;
        if (!v) return true;
        new Ajax.Request('<?php echo $this->getUrl('udmspro/vendor/checkVendorNameUnique')?>', {
            asynchronous: false,
            method: 'get',
            parameters: {
                vendor_name: v
            },
            onFailure: function(transport){
                alert('Error during shop name check');
            },
            onSuccess: function (transport) {
                var responseText = transport.responseText;
                if (responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        result = false;
                    } else if (response.success) {
                        result = true;
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    result = false;
                    alert('Error during shop name check');
                }
            }
        });
        return result;
    }
    var udCheckUrlkeyExist = function(v, el) {
        var result = true, allowReturn=false;
        if (!v) return true;
        new Ajax.Request('<?php echo $this->getUrl('udmspro/vendor/checkUrlkeyUnique')?>', {
            asynchronous: false,
            method: 'get',
            parameters: {
                urlkey: v
            },
            onFailure: function(transport){
                alert('Error during url key check');
            },
            onSuccess: function (transport) {
                var responseText = transport.responseText;
                if (responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        result = false;
                    } else if (response.success) {
                        result = true;
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    result = false;
                    alert('Error during shop name check');
                }
            }
        });
        return result;
    }
    Validation.addAllThese([
        ['validate-urlkey', 'Please use only letters (a-z) or numbers (0-9) in this field, first character should be a letter.', function (v) {
            if (!v) return true;
            return Validation.get('IsEmpty').test(v) ||  /^[a-z]+[a-z0-9]+$/.test(v)
        }],
        ['udvendor_urlkey-unique', 'This url key is already used.', udCheckUrlkeyExist],
        ['udvendor_name-unique', 'This vendor name is already used.', udCheckVendorNameExist],
        ['udemail-unique', 'This email is already used.', udCheckEmailExist],
        ['udvalidate-lte', 'Invalid input or value exceed maximum.', udNumberValidate.curry('lte')],
        ['udvalidate-lt', 'Invalid input or value exceed maximum.', udNumberValidate.curry('lt')],
        ['udvalidate-gte', 'Invalid input or value lesser minimum.', udNumberValidate.curry('gte')],
        ['udvalidate-gt', 'Invalid input or value lesser minimum.', udNumberValidate.curry('gt')],
        ['udvalidate-length-lte', 'Length exceed maximum.', udLengthValidate.curry(false, 'lte')],
        ['udvalidate-length-lt', 'Length exceed maximum.', udLengthValidate.curry(false, 'lt')],
        ['udvalidate-length-gte', 'Length lesser minimum.', udLengthValidate.curry(false, 'gte')],
        ['udvalidate-length-gt', 'Length lesser minimum.', udLengthValidate.curry(false, 'gt')],
        ['udvalidate-symlength-lte', 'Length exceed maximum.', udLengthValidate.curry(true, 'lte')],
        ['udvalidate-symlength-lt', 'Length exceed maximum.', udLengthValidate.curry(true, 'lt')],
        ['udvalidate-symlength-gte', 'Length lesser minimum.', udLengthValidate.curry(true, 'gte')],
        ['udvalidate-symlength-gt', 'Length lesser minimum.', udLengthValidate.curry(true, 'gt')],
        ['udvalidate-nospecial', 'Please use only letters (a-z or A-Z) or numbers (0-9) or spaces only in this field. No other characters are allowed.', function(v) {
            return Validation.get('IsEmpty').test(v) ||  /^[ \ta-zA-Z0-9]+$/.test(v) /*!/\W/.test(v)*/
        }],
        ['udvalidate-radios', 'Please select one of the above options.', function (v,elm) {
            var name = elm.name;
            var options = $A([]);
            $$('[name='+elm.name+']').each(function(__el){
                if (__el.id.startsWith(name)) {
                    options.push(__el);
                }
            });
            console.log(options)
            return options.any(function(elm) {
                return $F(elm);
            });
        }]
    ]);
    window['udRegForm'] = new VarienForm('umicrosite-registration-form', true);
    new RegionUpdater('country_id', 'region', 'region_id', <?php echo \Magento\Framework\App\ObjectManager::getInstance()->get('Magento\Directory\Helper\Data')->getRegionJson() ?>);

    Event.observe(window, 'load', function(e){
        var payout_selector = $('payout_method');
        if(!payout_selector) {
            return;
        }

        var name = $('vendor_attn');
        if (!name) {
            return;
        }

        function toggleNameRequired(){
            var val = payout_selector.value;
            if (val == 'paypal') {
                toggleElementRequired(name, true);
            } else {
                toggleElementRequired(name, false);
            }
        }


        function toggleElementRequired(el, req) {
            var el = $(el);
            var lbl = el.previous('label[for="' + el.identify() + '"]')
            if (req) {
                el.addClassName('required-entry');
                if (lbl) {
                    lbl.insert('<span class="required">*</span>')
                }
            }else {
                el.removeClassName('required-entry');
                if (lbl) {
                    var req_span = lbl.down('span.required');
                    if (req_span) {
                        Element.remove(req_span);
                    }
                }
            }
        }

        payout_selector.observe('change', toggleNameRequired);
        toggleNameRequired();
    });

});
</script>
